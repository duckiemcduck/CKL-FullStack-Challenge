version: '3'

services:
  db:
    image: postgres
    networks:
     - backend
    env_file:
    - ./BackEnd/env/db.env
  crawler:
    networks:
     - backend
    build:
     context: ./BackEnd/crawler-source/
    env_file:
     - ./BackEnd/env/db.env
    volumes:
     - ./BackEnd/crawler-source/:/env/
    command: /env/wait-for-it.sh web:8001 -t 0 -- /env/crawler-entrypoint.sh
    restart: always
  web:
    build: ./BackEnd/
    networks:
     - backend
    env_file:
     - ./BackEnd/env/web.env
    volumes:
      - ./BackEnd/:/code
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - db
    entrypoint: /code/wait-for-it.sh db:5432 -t 0 -- /code/web-entrypoint.sh
    restart: always
  webserver:
   image: nginx
   networks:
    - backend
    - frontend
   volumes:
     - ./BackEnd/:/code/
     - ./FrontEnd/:/app/
   ports:
     - "80:80"
     - "443:443"
   env_file:
     - ./BackEnd/env/webserver.env
   depends_on:
     - web
   environment:
     - PROXY_NAME=localhost
   entrypoint: /code/wait-for-it.sh web:8001 -t 0 -- /code/webserver-entrypoint.sh
   restart: always

  proxy:
   build: ./FrontEnd/
   networks:
    - frontend
   volumes:
    - ./FrontEnd/:/usr/src/app/
   environment:
    - NODE_ENV=dev
   ports:
    - "8080:8080"
   environment:
    - DEV=0
    - WIN_HOST=0
    - DEV_HOST=192.168.99.100
   depends_on:
    - webserver
   restart: always

   #https://github.com/yarnpkg/yarn/issues/929
   entrypoint: ./proxy-entrypoint.sh
networks:
  frontend:
  backend: